SELECT programs.program_id as program__program_id,
       programs.classpercentage as programs__percentage_of_classes,
       programs.interfacepercentage as programs__percentage_of_interfaces,
       programs.enumpercentage as programs__percentage_of_enums,
       programs.codeinpackages as programs__contains_code_in_packages,
       programs.defaultpackage as programs__contains_code_in_default_package,

       type_defs.nodetype_id as type_def__node_id,
       type_defs.typenodetype as type_def__syntactic_category,
       type_defs.typepublicvisibility as type_def__visibility,
       type_defs.isfinalclass as type_def__is_final,
       type_defs.hasextends as type_def__is_extension,
       type_defs.numberannotations as type_def__number_of_annotations,
       type_defs.isindefaultpackage as type_def__is_in_default_package,
       type_defs.numberimplements as type_def__number_of_implements,
       type_defs.numbergenerictypes as type_def__number_of_generics,
       type_defs.numbermethods as type_def__number_of_methods,
       type_defs.percentageoverloadedmethods as type_def__percentage_overloaded_methods,
       type_defs.numberconstructors as type_def__number_of_constructors,
       type_defs.numberfields as type_def__number_of_fields,
       type_defs.numbernestedtypes as type_def__number_of_nested_types,
       type_defs.numberinnertypes as type_def__number_of_inner_types,
       type_defs.namingconvention as type_def__naming_convention,
       type_defs.isabstract as type_def__is_abstract,
       type_defs.numberstaticnestedtypes as type_def__number_of_static_nested_types,
       type_defs.isinnerclass as type_def__is_inner,
       type_defs.isstrictfp as type_def__is_strictfp,
       type_defs.staticfieldpercentage as type_def__percentage_of_static_fields,
       type_defs.staticmethodpercentage as type_def__percentage_of_static_methods,
       type_defs.numberstaticblocks as type_def__number_of_static_blocks,
       type_defs.isnestedclass as type_def__is_nested,
       type_defs.isstatic as type_def__is_static,

       field_defs.nodetype_id as fied_def__node_id,
       field_defs.fieldvisibility as field_def__visibility,
       field_defs.isfinal as field_def__is_final,
       field_defs.isstatic as field_def__is_static,
       field_defs.numberannotations as field_def__number_of_annotations,
       field_defs.namingconvention as field_def__naming_convention,
       field_defs.initialvalue as field_def__initial_value,
       field_defs.type as field_def__syntatic_category,
       field_defs.isvolatile as field_def__is_volatile,
       field_defs.istransient as field_def__is_transient,
       field_defs.parentnode as field_def__syntactic_category_parent_node,
       field_defs.user_id as field_def__user_id,
       field_defs.user_class as field_def__user_class

FROM program programs, file file, typedefinition type_defs, nodetype n1,
     nodetype n2, fielddefinition field_defs, "type" types
WHERE programs.program_id = file.program_id and file.file_id = type_defs.file_id
AND n1.parentnode_id = type_defs.nodetype_id and n1.nodetype_id = field_defs.nodetype_id
AND n2.parentnode_id = field_defs.nodetype_id and n2.nodetype_id = "types".nodetype_id;